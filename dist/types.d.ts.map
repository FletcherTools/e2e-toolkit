{"mappings":"AOMA;IACI,oBAAoB,CAAC,EAAE,MAAM,CAAA;IAC7B,oBAAoB,CAAC,EAAE,MAAM,CAAA;IAC7B,iBAAiB,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;CAC7C;AAED,kCAAkC,MAAM,EAAE,gBAAgB;;;EAiBzD","sources":["src/src/helpers.context.ts","src/src/inner/extend-config.helper.ts","src/src/inner/escape.helper.ts","src/src/inner/tag.decorator.ts","src/src/inner/index.ts","src/src/outer/url-matcher.helper.ts","src/src/outer/parse-custom-query.helper.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,"import { HelperContext, defaultHelperContext } from './helpers.context';\nimport { tagDecorator, extendConfig, escape } from './inner';\n\nimport { urlMatcherHelper } from './outer/url-matcher.helper';\nimport { parseCustomQuery } from './outer/parse-custom-query.helper';\n\nexport interface E2EHelpersConfig {\n    customSelectorPrefix?: string\n    pseudoSelectorPrefix?: string\n    pseudoSelectorMap?: Record<string, string>\n}\n\nexport function e2eHelpersFactory(config: E2EHelpersConfig) {\n    const mergedCtx: HelperContext = extendConfig(defaultHelperContext, {\n        customSelectorPrefix: config.customSelectorPrefix,\n        pseudoSelectorPrefix: config.pseudoSelectorPrefix,\n        pseudoSelectorMap: config.pseudoSelectorMap\n    });\n\n    const ctx: HelperContext = {\n        ...mergedCtx,\n        _customSelectorPrefixEscaped: escape(mergedCtx.customSelectorPrefix),\n        _pseudoSelectorPrefixEscaped: escape(mergedCtx.pseudoSelectorPrefix)\n    }\n\n    return {\n        r: tagDecorator(urlMatcherHelper, ctx),\n        q: tagDecorator(parseCustomQuery, ctx),\n    }\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}